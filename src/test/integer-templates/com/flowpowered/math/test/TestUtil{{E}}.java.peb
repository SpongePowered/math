package org.spongepowered.math.test;

import org.junit.jupiter.api.Assertions;
import org.spongepowered.math.vector.Vector2{{ E }};
import org.spongepowered.math.vector.Vector3{{ E }};
import org.spongepowered.math.vector.Vector4{{ E }};
import org.spongepowered.math.vector.VectorN{{ E }};

public class TestUtil{{ E }} {
    public static void assertEquals(final {{ e }} value, final {{ e }} expected) {
        Assertions.assertEquals(expected, value);
    }

    public static void assertEquals(final {{ e }} value, final {{ EOverload }} expected) {
        assertEquals(value, ({{ e }}) expected);
    }
    public static void assertEquals(final Vector2{{ E }} v, final {{ e }} x, final {{ e }} y) {
        assertEquals(v.x(), x);
        assertEquals(v.y(), y);
    }

    public static void assertEquals(final Vector2{{ E }} v, final {{ EOverload }} x, final {{ EOverload }} y) {
        assertEquals(v, ({{ e }}) x, ({{ e }}) y);
    }

    public static void assertEquals(final Vector3{{ E }} v, final {{ e }} x, final {{ e }} y, final {{ e }} z) {
        assertEquals(v.x(), x);
        assertEquals(v.y(), y);
        assertEquals(v.z(), z);
    }

    public static void assertEquals(final Vector3{{ E }} v, final {{ EOverload }} x, final {{ EOverload }} y, final {{ EOverload }} z) {
            assertEquals(v, ({{ e }}) x, ({{ e }}) y, ({{ e }}) z);
        }

    public static void assertEquals(final Vector4{{ E }} v, final {{ e }} x, final {{ e }} y, final {{ e }} z, final {{ e }} w) {
        assertEquals(v.x(), x);
        assertEquals(v.y(), y);
        assertEquals(v.z(), z);
        assertEquals(v.w(), w);
    }

    public static void assertEquals(final Vector4{{ E }} v, final {{ EOverload }} x, final {{ EOverload }} y, final {{ EOverload }} z, final {{ EOverload }} w) {
        assertEquals(v, ({{ e }}) x, ({{ e }}) y, ({{ e }}) z, ({{ e }}) w);
    }

    public static void assertEquals(final VectorN{{ E }} v, final {{ e }}... f) {
        Assertions.assertArrayEquals(f, v.toArray());
    }

    public static void assertEquals(final {{ e }}[] a, final {{ e }}... f) {
        Assertions.assertArrayEquals(f, a);
    }
}
