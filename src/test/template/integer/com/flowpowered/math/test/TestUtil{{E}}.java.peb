package org.spongepowered.math.test;

import org.junit.Assert;

import org.spongepowered.math.vector.Vector2{{ E }};
import org.spongepowered.math.vector.Vector3{{ E }};
import org.spongepowered.math.vector.Vector4{{ E }};
import org.spongepowered.math.vector.VectorN{{ E }};

public class TestUtil{{ E }} {
    public static void assertEquals({{ e }} value, {{ e }} expected) {
        Assert.assertEquals(expected, value);
    }

    public static void assertEquals({{ e }} value, {{ EOverload }} expected) {
        assertEquals(value, ({{ e }}) expected);
    }
    public static void assertEquals(Vector2{{ E }} v, {{ e }} x, {{ e }} y) {
        assertEquals(v.getX(), x);
        assertEquals(v.getY(), y);
    }

    public static void assertEquals(Vector2{{ E }} v, {{ EOverload }} x, {{ EOverload }} y) {
        assertEquals(v, ({{ e }}) x, ({{ e }}) y);
    }

    public static void assertEquals(Vector3{{ E }} v, {{ e }} x, {{ e }} y, {{ e }} z) {
        assertEquals(v.getX(), x);
        assertEquals(v.getY(), y);
        assertEquals(v.getZ(), z);
    }

    public static void assertEquals(Vector3{{ E }} v, {{ EOverload }} x, {{ EOverload }} y, {{ EOverload }} z) {
            assertEquals(v, ({{ e }}) x, ({{ e }}) y, ({{ e }}) z);
        }

    public static void assertEquals(Vector4{{ E }} v, {{ e }} x, {{ e }} y, {{ e }} z, {{ e }} w) {
        assertEquals(v.getX(), x);
        assertEquals(v.getY(), y);
        assertEquals(v.getZ(), z);
        assertEquals(v.getW(), w);
    }

    public static void assertEquals(Vector4{{ E }} v, {{ EOverload }} x, {{ EOverload }} y, {{ EOverload }} z, {{ EOverload }} w) {
        assertEquals(v, ({{ e }}) x, ({{ e }}) y, ({{ e }}) z, ({{ e }}) w);
    }

    public static void assertEquals(VectorN{{ E }} v, {{ e }}... f) {
        Assert.assertArrayEquals(f, v.toArray());
    }

    public static void assertEquals({{ e }}[] a, {{ e }}... f) {
        Assert.assertArrayEquals(f, a);
    }
}
